version: '3.5'
services:
  rabbitmq: 
    image: rabbitmq:3.12-management
    container_name: typoteka.notify.rabbitmq
    hostname: rabbitmq
    ports:
      - '1080:15672'
      - '5672:5672'
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: test
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - adaptation.backend.network

  mongodb:
    image: mongo
    container_name: adaptation.backend.mongodb
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: test
      MONGO_INITDB_DATABASE: adaptation-backend
    ports:
      - 27017:27017
    volumes:
      - adaptation.backend.volume:/data/db
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/adaptation-backend --quiet
      interval: 10s
      timeout: 10s
      retries: 5
    networks:
      - adaptation.backend.network

  mongodb-express:
    image: mongo-express
    restart: always
    container_name: mongo-express
    depends_on:
      - mongodb
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: test
      ME_CONFIG_MONGODB_URL: mongodb://admin:test@mongodb:27017/
    networks:
     - adaptation.backend.network

  adaptation.backend:
    container_name: adaptation.backend
    depends_on:
      - mongodb
    restart: always
    image: adaptation.backend:latest
    env_file:
      - .backend.env
    ports:
      - 3333:3333
    networks:
      - adaptation.backend.network

  adaptation.notify.mongodb:
    image: mongo
    command: mongod --port 27018
    ports:
      - 27018:27018
    container_name: adaptation.notify.mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: test
      MONGO_INITDB_DATABASE: adaptation-notify
    volumes:
      - adaptation.notify.volume:/data/db
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27018/adaptation-notify --quiet
      interval: 10s
      timeout: 10s
      retries: 5
    networks:
      - adaptation.backend.network

  adaptation.notify-express:
    image: mongo-express
    depends_on:
      - adaptation.notify.mongodb
    container_name: adaptation.notify.mongo-express
    restart: always
    ports:
      - 8082:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: test
      ME_CONFIG_MONGODB_URL: mongodb://admin:test@adaptation.notify.mongodb:27018/
    networks:
      - adaptation.backend.network

  adaptation.notify:
    image: adaptation.notify:latest
    depends_on:
      - rabbitmq
      - adaptation.backend
    container_name: adaptation.notify
    restart: always
    env_file:
      - .notify.env
    networks:
      - adaptation.backend.network

networks:
  adaptation.backend.network:
    driver: bridge
  
volumes: 
  adaptation.backend.volume:
  adaptation.notify.volume: